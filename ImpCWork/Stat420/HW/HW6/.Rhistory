x = runif(n, -2, 2)
reps = 2500
beta0 = 4
beta1 = 0
sigma = 5
beta0hat = vector(length = reps)
beta1hat = vector(length = reps)
for(i in 1:reps){
epsilon = rnorm(n, 0, sigma)
y = beta0 + beta1 * x + epsilon
mymodel = lm(y ~ x)
beta0hat[i] = coefficients(mymodel)[1]  # Estimated intercept
beta1hat[i] = coefficients(mymodel)[2]  # Estimated slope
}
ests = data.frame(cbind(beta0hat, beta1hat))
hist(beta1hat, breaks=50, main="Histogram of Simulated beta1hat Values", xlab="Estimated Slope (beta1hat)", border="black", col="gray75")
skeptic_data <- read.csv("skeptic.csv")
model <- lm(y ~ x, data=skeptic_data)
cat("Estimated coefficient for beta1:", coefficients(model)[2])
proportion_more_extreme = mean(abs(beta1hat) > abs(0.6895595))
cat("Proportion of simulated beta1hat values more extreme than the observed value:", proportion_more_extreme)
sigma2 <- 25
n <- length(x)
x_bar <- mean(x)
var_beta0hat <- sigma2 * (1/n + x_bar^2 / sum((x - x_bar)^2))
var_beta0hat
mean_beta0hat <- mean(beta0hat)
variance_beta0hat <- var(beta0hat)
list(mean = mean_beta0hat, variance = variance_beta0hat)
hist(beta0hat, breaks=50, main="Histogram of Simulated beta0hat Values", xlab="Estimated Intercept (beta0hat)", border="black", col="gray75")
goalies <- read.csv("goalies.csv")
goalie_model <- lm(W ~ GAA + SV_PCT, data = goalies)
summary(goalie_model)
goalie_model = lm(W ~ MIN, data = goalies)
model <- lm(W ~ GAA + SV_PCT, data = goalies)
f_statistic <- summary(model)$fstatistic["value"]
p_value <- 1 - pf(f_statistic, summary(model)$fstatistic["numdf"], summary(model)$fstatistic["dendf"])
decision <- ifelse(p_value < 0.01, "Reject H0", "Fail to Reject H0")
list(F_statistic = f_statistic, p_value = p_value, decision = decision)
new_data <- data.frame(GAA = 2.93, SV_PCT = 0.906)
predicted_wins <- predict(your_model_name, newdata = new_data)
library(ggplot2)
library(MASS)
birthday = 20020124
set.seed(birthday)
n = 125
x = runif(n, -2, 2)
reps = 2500
beta0 = 4
beta1 = 0
sigma = 5
beta0hat = vector(length = reps)
beta1hat = vector(length = reps)
for(i in 1:reps){
epsilon = rnorm(n, 0, sigma)
y = beta0 + beta1 * x + epsilon
mymodel = lm(y ~ x)
beta0hat[i] = coefficients(mymodel)[1]  # Estimated intercept
beta1hat[i] = coefficients(mymodel)[2]  # Estimated slope
}
ests = data.frame(cbind(beta0hat, beta1hat))
hist(beta1hat, breaks=50, main="Histogram of Simulated beta1hat Values", xlab="Estimated Slope (beta1hat)", border="black", col="gray75")
skeptic_data <- read.csv("skeptic.csv")
model <- lm(y ~ x, data=skeptic_data)
cat("Estimated coefficient for beta1:", coefficients(model)[2])
proportion_more_extreme = mean(abs(beta1hat) > abs(0.6895595))
cat("Proportion of simulated beta1hat values more extreme than the observed value:", proportion_more_extreme)
sigma2 <- 25
n <- length(x)
x_bar <- mean(x)
var_beta0hat <- sigma2 * (1/n + x_bar^2 / sum((x - x_bar)^2))
var_beta0hat
mean_beta0hat <- mean(beta0hat)
variance_beta0hat <- var(beta0hat)
list(mean = mean_beta0hat, variance = variance_beta0hat)
hist(beta0hat, breaks=50, main="Histogram of Simulated beta0hat Values", xlab="Estimated Intercept (beta0hat)", border="black", col="gray75")
goalies <- read.csv("goalies.csv")
goalie_model <- lm(W ~ GAA + SV_PCT, data = goalies)
summary(goalie_model)
goalie_model = lm(W ~ MIN, data = goalies)
model <- lm(W ~ GAA + SV_PCT, data = goalies)
f_statistic <- summary(model)$fstatistic["value"]
p_value <- 1 - pf(f_statistic, summary(model)$fstatistic["numdf"], summary(model)$fstatistic["dendf"])
decision <- ifelse(p_value < 0.01, "Reject H0", "Fail to Reject H0")
list(F_statistic = f_statistic, p_value = p_value, decision = decision)
new_data <- data.frame(GAA = 2.93, SV_PCT = 0.906)
predicted_wins <- predict(goalie_model, newdata = new_data)
library(ggplot2)
library(MASS)
birthday = 20020124
set.seed(birthday)
n = 125
x = runif(n, -2, 2)
reps = 2500
beta0 = 4
beta1 = 0
sigma = 5
beta0hat = vector(length = reps)
beta1hat = vector(length = reps)
for(i in 1:reps){
epsilon = rnorm(n, 0, sigma)
y = beta0 + beta1 * x + epsilon
mymodel = lm(y ~ x)
beta0hat[i] = coefficients(mymodel)[1]  # Estimated intercept
beta1hat[i] = coefficients(mymodel)[2]  # Estimated slope
}
ests = data.frame(cbind(beta0hat, beta1hat))
hist(beta1hat, breaks=50, main="Histogram of Simulated beta1hat Values", xlab="Estimated Slope (beta1hat)", border="black", col="gray75")
skeptic_data <- read.csv("skeptic.csv")
model <- lm(y ~ x, data=skeptic_data)
cat("Estimated coefficient for beta1:", coefficients(model)[2])
proportion_more_extreme = mean(abs(beta1hat) > abs(0.6895595))
cat("Proportion of simulated beta1hat values more extreme than the observed value:", proportion_more_extreme)
sigma2 <- 25
n <- length(x)
x_bar <- mean(x)
var_beta0hat <- sigma2 * (1/n + x_bar^2 / sum((x - x_bar)^2))
var_beta0hat
mean_beta0hat <- mean(beta0hat)
variance_beta0hat <- var(beta0hat)
list(mean = mean_beta0hat, variance = variance_beta0hat)
hist(beta0hat, breaks=50, main="Histogram of Simulated beta0hat Values", xlab="Estimated Intercept (beta0hat)", border="black", col="gray75")
goalies <- read.csv("goalies.csv")
goalie_model <- lm(W ~ GAA + SV_PCT, data = goalies)
summary(goalie_model)
goalie_model = lm(W ~ MIN, data = goalies)
model <- lm(W ~ GAA + SV_PCT, data = goalies)
f_statistic <- summary(model)$fstatistic["value"]
p_value <- 1 - pf(f_statistic, summary(model)$fstatistic["numdf"], summary(model)$fstatistic["dendf"])
decision <- ifelse(p_value < 0.01, "Reject H0", "Fail to Reject H0")
list(F_statistic = f_statistic, p_value = p_value, decision = decision)
new_data <- data.frame(GAA = 2.93, SV_PCT = 0.906)
predicted_wins <- predict(model, newdata = new_data)
predicted_wins
# Use this code chunk for your answer.
# Use this code chunk for your answer.
# Use this code chunk for your answer.
# Use this code chunk for your answer.
# Use this code chunk for your answer, if needed.
library(ggplot2)
library(MASS)
birthday = 20020124
set.seed(birthday)
n = 125
x = runif(n, -2, 2)
reps = 2500
beta0 = 4
beta1 = 0
sigma = 5
beta0hat = vector(length = reps)
beta1hat = vector(length = reps)
for(i in 1:reps){
epsilon = rnorm(n, 0, sigma)
y = beta0 + beta1 * x + epsilon
mymodel = lm(y ~ x)
beta0hat[i] = coefficients(mymodel)[1]  # Estimated intercept
beta1hat[i] = coefficients(mymodel)[2]  # Estimated slope
}
ests = data.frame(cbind(beta0hat, beta1hat))
hist(beta1hat, breaks=50, main="Histogram of Simulated beta1hat Values", xlab="Estimated Slope (beta1hat)", border="black", col="gray75")
skeptic_data <- read.csv("skeptic.csv")
model <- lm(y ~ x, data=skeptic_data)
cat("Estimated coefficient for beta1:", coefficients(model)[2])
proportion_more_extreme = mean(abs(beta1hat) > abs(0.6895595))
cat("Proportion of simulated beta1hat values more extreme than the observed value:", proportion_more_extreme)
sigma2 <- 25
n <- length(x)
x_bar <- mean(x)
var_beta0hat <- sigma2 * (1/n + x_bar^2 / sum((x - x_bar)^2))
var_beta0hat
mean_beta0hat <- mean(beta0hat)
variance_beta0hat <- var(beta0hat)
list(mean = mean_beta0hat, variance = variance_beta0hat)
hist(beta0hat, breaks=50, main="Histogram of Simulated beta0hat Values", xlab="Estimated Intercept (beta0hat)", border="black", col="gray75")
goalies <- read.csv("goalies.csv")
goalie_model <- lm(W ~ GAA + SV_PCT, data = goalies)
summary(goalie_model)
goalie_model = lm(W ~ MIN, data = goalies)
model <- lm(W ~ GAA + SV_PCT, data = goalies)
f_statistic <- summary(model)$fstatistic["value"]
p_value <- 1 - pf(f_statistic, summary(model)$fstatistic["numdf"], summary(model)$fstatistic["dendf"])
decision <- ifelse(p_value < 0.01, "Reject H0", "Fail to Reject H0")
list(F_statistic = f_statistic, p_value = p_value, decision = decision)
new_data <- data.frame(GAA = 2.93, SV_PCT = 0.906)
predicted_wins <- predict(model, newdata = new_data)
predicted_wins
predict_interval <- predict(model, newdata = new_data, interval = "confidence", level = 0.90)
predict_interval
sy <- sd(goalies$W)
se <- summary(model)$sigma
list(sy, se)
# Use this code chunk for your answer.
# Use this code chunk for your answer.
# Use this code chunk for your answer, if needed.
model1 <- lm(W ~ GAA + SV_PCT, data = goalies)
model4 <- lm(W ~ ., data = goalies)
f_test_result <- anova(model1, model4)
f_test_statistic <- f_test_result$F[2]
f_test_p_value <- f_test_result$`Pr(>F)`[2]
list(f_test_statistic, f_test_p_value)
library(ggplot2)
library(MASS)
birthday = 20020124
set.seed(birthday)
n = 125
x = runif(n, -2, 2)
reps = 2500
beta0 = 4
beta1 = 0
sigma = 5
beta0hat = vector(length = reps)
beta1hat = vector(length = reps)
for(i in 1:reps){
epsilon = rnorm(n, 0, sigma)
y = beta0 + beta1 * x + epsilon
mymodel = lm(y ~ x)
beta0hat[i] = coefficients(mymodel)[1]  # Estimated intercept
beta1hat[i] = coefficients(mymodel)[2]  # Estimated slope
}
ests = data.frame(cbind(beta0hat, beta1hat))
hist(beta1hat, breaks=50, main="Histogram of Simulated beta1hat Values", xlab="Estimated Slope (beta1hat)", border="black", col="gray75")
skeptic_data <- read.csv("skeptic.csv")
model <- lm(y ~ x, data=skeptic_data)
cat("Estimated coefficient for beta1:", coefficients(model)[2])
proportion_more_extreme = mean(abs(beta1hat) > abs(0.6895595))
cat("Proportion of simulated beta1hat values more extreme than the observed value:", proportion_more_extreme)
sigma2 <- 25
n <- length(x)
x_bar <- mean(x)
var_beta0hat <- sigma2 * (1/n + x_bar^2 / sum((x - x_bar)^2))
var_beta0hat
mean_beta0hat <- mean(beta0hat)
variance_beta0hat <- var(beta0hat)
list(mean = mean_beta0hat, variance = variance_beta0hat)
hist(beta0hat, breaks=50, main="Histogram of Simulated beta0hat Values", xlab="Estimated Intercept (beta0hat)", border="black", col="gray75")
goalies <- read.csv("goalies.csv")
goalie_model <- lm(W ~ GAA + SV_PCT, data = goalies)
summary(goalie_model)
goalie_model = lm(W ~ MIN, data = goalies)
model <- lm(W ~ GAA + SV_PCT, data = goalies)
f_statistic <- summary(model)$fstatistic["value"]
p_value <- 1 - pf(f_statistic, summary(model)$fstatistic["numdf"], summary(model)$fstatistic["dendf"])
decision <- ifelse(p_value < 0.01, "Reject H0", "Fail to Reject H0")
list(F_statistic = f_statistic, p_value = p_value, decision = decision)
new_data <- data.frame(GAA = 2.93, SV_PCT = 0.906)
predicted_wins <- predict(model, newdata = new_data)
predicted_wins
predict_interval <- predict(model, newdata = new_data, interval = "confidence", level = 0.90)
predict_interval
sy <- sd(goalies$W)
se <- summary(model)$sigma
list(sy, se)
model1 <- lm(W ~ GAA + SV_PCT, data = goalies)
model4 <- lm(W ~ ., data = goalies)
f_test_result <- anova(model1, model4)
f_test_statistic <- f_test_result$F[2]
f_test_p_value <- f_test_result$`Pr(>F)`[2]
list(f_test_statistic, f_test_p_value)
# Use this code chunk for your answer.
# Use this code chunk for your answer, if needed.
library(ggplot2)
library(MASS)
birthday = 20020124
set.seed(birthday)
n = 125
x = runif(n, -2, 2)
reps = 2500
beta0 = 4
beta1 = 0
sigma = 5
beta0hat = vector(length = reps)
beta1hat = vector(length = reps)
for(i in 1:reps){
epsilon = rnorm(n, 0, sigma)
y = beta0 + beta1 * x + epsilon
mymodel = lm(y ~ x)
beta0hat[i] = coefficients(mymodel)[1]  # Estimated intercept
beta1hat[i] = coefficients(mymodel)[2]  # Estimated slope
}
ests = data.frame(cbind(beta0hat, beta1hat))
hist(beta1hat, breaks=50, main="Histogram of Simulated beta1hat Values", xlab="Estimated Slope (beta1hat)", border="black", col="gray75")
skeptic_data <- read.csv("skeptic.csv")
model <- lm(y ~ x, data=skeptic_data)
cat("Estimated coefficient for beta1:", coefficients(model)[2])
proportion_more_extreme = mean(abs(beta1hat) > abs(0.6895595))
cat("Proportion of simulated beta1hat values more extreme than the observed value:", proportion_more_extreme)
sigma2 <- 25
n <- length(x)
x_bar <- mean(x)
var_beta0hat <- sigma2 * (1/n + x_bar^2 / sum((x - x_bar)^2))
var_beta0hat
mean_beta0hat <- mean(beta0hat)
variance_beta0hat <- var(beta0hat)
list(mean = mean_beta0hat, variance = variance_beta0hat)
hist(beta0hat, breaks=50, main="Histogram of Simulated beta0hat Values", xlab="Estimated Intercept (beta0hat)", border="black", col="gray75")
goalies <- read.csv("goalies.csv")
goalie_model <- lm(W ~ GAA + SV_PCT, data = goalies)
summary(goalie_model)
goalie_model = lm(W ~ MIN, data = goalies)
model <- lm(W ~ GAA + SV_PCT, data = goalies)
f_statistic <- summary(model)$fstatistic["value"]
p_value <- 1 - pf(f_statistic, summary(model)$fstatistic["numdf"], summary(model)$fstatistic["dendf"])
decision <- ifelse(p_value < 0.01, "Reject H0", "Fail to Reject H0")
list(F_statistic = f_statistic, p_value = p_value, decision = decision)
new_data <- data.frame(GAA = 2.93, SV_PCT = 0.906)
predicted_wins <- predict(model, newdata = new_data)
predicted_wins
predict_interval <- predict(model, newdata = new_data, interval = "confidence", level = 0.90)
predict_interval
sy <- sd(goalies$W)
se <- summary(model)$sigma
list(sy, se)
model1 <- lm(W ~ GAA + SV_PCT, data = goalies)
model4 <- lm(W ~ ., data = goalies)
f_test_result <- anova(model1, model4)
f_test_statistic <- f_test_result$F[2]
f_test_p_value <- f_test_result$`Pr(>F)`[2]
list(f_test_statistic, f_test_p_value)
t_test_statistic <- summary(model4)$coefficients["MIN", "t value"]
t_test_p_value <- summary(model4)$coefficients["MIN", "Pr(>|t|)"]
list(t_test_statistic, t_test_p_value)
# Use this code chunk for your answer, if needed.
library(ggplot2)
library(MASS)
birthday = 20020124
set.seed(birthday)
n = 125
x = runif(n, -2, 2)
reps = 2500
beta0 = 4
beta1 = 0
sigma = 5
beta0hat = vector(length = reps)
beta1hat = vector(length = reps)
for(i in 1:reps){
epsilon = rnorm(n, 0, sigma)
y = beta0 + beta1 * x + epsilon
mymodel = lm(y ~ x)
beta0hat[i] = coefficients(mymodel)[1]  # Estimated intercept
beta1hat[i] = coefficients(mymodel)[2]  # Estimated slope
}
ests = data.frame(cbind(beta0hat, beta1hat))
hist(beta1hat, breaks=50, main="Histogram of Simulated beta1hat Values", xlab="Estimated Slope (beta1hat)", border="black", col="gray75")
skeptic_data <- read.csv("skeptic.csv")
model <- lm(y ~ x, data=skeptic_data)
cat("Estimated coefficient for beta1:", coefficients(model)[2])
proportion_more_extreme = mean(abs(beta1hat) > abs(0.6895595))
cat("Proportion of simulated beta1hat values more extreme than the observed value:", proportion_more_extreme)
sigma2 <- 25
n <- length(x)
x_bar <- mean(x)
var_beta0hat <- sigma2 * (1/n + x_bar^2 / sum((x - x_bar)^2))
var_beta0hat
mean_beta0hat <- mean(beta0hat)
variance_beta0hat <- var(beta0hat)
list(mean = mean_beta0hat, variance = variance_beta0hat)
hist(beta0hat, breaks=50, main="Histogram of Simulated beta0hat Values", xlab="Estimated Intercept (beta0hat)", border="black", col="gray75")
goalies <- read.csv("goalies.csv")
goalie_model <- lm(W ~ GAA + SV_PCT, data = goalies)
summary(goalie_model)
goalie_model = lm(W ~ MIN, data = goalies)
model <- lm(W ~ GAA + SV_PCT, data = goalies)
f_statistic <- summary(model)$fstatistic["value"]
p_value <- 1 - pf(f_statistic, summary(model)$fstatistic["numdf"], summary(model)$fstatistic["dendf"])
decision <- ifelse(p_value < 0.01, "Reject H0", "Fail to Reject H0")
list(F_statistic = f_statistic, p_value = p_value, decision = decision)
new_data <- data.frame(GAA = 2.93, SV_PCT = 0.906)
predicted_wins <- predict(model, newdata = new_data)
predicted_wins
predict_interval <- predict(model, newdata = new_data, interval = "confidence", level = 0.90)
predict_interval
sy <- sd(goalies$W)
se <- summary(model)$sigma
list(sy, se)
model1 <- lm(W ~ GAA + SV_PCT, data = goalies)
model4 <- lm(W ~ ., data = goalies)
f_test_result <- anova(model1, model4)
f_test_statistic <- f_test_result$F[2]
f_test_p_value <- f_test_result$`Pr(>F)`[2]
list(f_test_statistic, f_test_p_value)
t_test_statistic <- summary(model4)$coefficients["MIN", "t value"]
t_test_p_value <- summary(model4)$coefficients["MIN", "Pr(>|t|)"]
list(t_test_statistic, t_test_p_value)
# Calculate the F-statistic from the t-test statistic
f_statistic_from_t <- t_test_statistic^2
f_statistic_from_t
library(ggplot2)
library(MASS)
birthday = 20020124
set.seed(birthday)
n = 125
x = runif(n, -2, 2)
reps = 2500
beta0 = 4
beta1 = 0
sigma = 5
beta0hat = vector(length = reps)
beta1hat = vector(length = reps)
for(i in 1:reps){
epsilon = rnorm(n, 0, sigma)
y = beta0 + beta1 * x + epsilon
mymodel = lm(y ~ x)
beta0hat[i] = coefficients(mymodel)[1]  # Estimated intercept
beta1hat[i] = coefficients(mymodel)[2]  # Estimated slope
}
ests = data.frame(cbind(beta0hat, beta1hat))
hist(beta1hat, breaks=50, main="Histogram of Simulated beta1hat Values", xlab="Estimated Slope (beta1hat)", border="black", col="gray75")
skeptic_data <- read.csv("skeptic.csv")
model <- lm(y ~ x, data=skeptic_data)
cat("Estimated coefficient for beta1:", coefficients(model)[2])
proportion_more_extreme = mean(abs(beta1hat) > abs(0.6895595))
cat("Proportion of simulated beta1hat values more extreme than the observed value:", proportion_more_extreme)
sigma2 <- 25
n <- length(x)
x_bar <- mean(x)
var_beta0hat <- sigma2 * (1/n + x_bar^2 / sum((x - x_bar)^2))
var_beta0hat
mean_beta0hat <- mean(beta0hat)
variance_beta0hat <- var(beta0hat)
list(mean = mean_beta0hat, variance = variance_beta0hat)
hist(beta0hat, breaks=50, main="Histogram of Simulated beta0hat Values", xlab="Estimated Intercept (beta0hat)", border="black", col="gray75")
goalies <- read.csv("goalies.csv")
goalie_model <- lm(W ~ GAA + SV_PCT, data = goalies)
summary(goalie_model)
goalie_model = lm(W ~ MIN, data = goalies)
model <- lm(W ~ GAA + SV_PCT, data = goalies)
f_statistic <- summary(model)$fstatistic["value"]
p_value <- 1 - pf(f_statistic, summary(model)$fstatistic["numdf"], summary(model)$fstatistic["dendf"])
decision <- ifelse(p_value < 0.01, "Reject H0", "Fail to Reject H0")
list(F_statistic = f_statistic, p_value = p_value, decision = decision)
new_data <- data.frame(GAA = 2.93, SV_PCT = 0.906)
predicted_wins <- predict(model, newdata = new_data)
predicted_wins
predict_interval <- predict(model, newdata = new_data, interval = "confidence", level = 0.90)
predict_interval
sy <- sd(goalies$W)
se <- summary(model)$sigma
list(sy, se)
model1 <- lm(W ~ GAA + SV_PCT, data = goalies)
model4 <- lm(W ~ ., data = goalies)
f_test_result <- anova(model1, model4)
f_test_statistic <- f_test_result$F[2]
f_test_p_value <- f_test_result$`Pr(>F)`[2]
list(f_test_statistic, f_test_p_value)
t_test_statistic <- summary(model4)$coefficients["MIN", "t value"]
t_test_p_value <- summary(model4)$coefficients["MIN", "Pr(>|t|)"]
list(t_test_statistic, t_test_p_value)
f_statistic_from_t <- t_test_statistic^2
f_statistic_from_t
library(ggplot2)
library(MASS)
birthday = 20020124
set.seed(birthday)
n = 125
x = runif(n, -2, 2)
reps = 2500
beta0 = 4
beta1 = 0
sigma = 5
beta0hat = vector(length = reps)
beta1hat = vector(length = reps)
for(i in 1:reps){
epsilon = rnorm(n, 0, sigma)
y = beta0 + beta1 * x + epsilon
mymodel = lm(y ~ x)
beta0hat[i] = coefficients(mymodel)[1]  # Estimated intercept
beta1hat[i] = coefficients(mymodel)[2]  # Estimated slope
}
ests = data.frame(cbind(beta0hat, beta1hat))
hist(beta1hat, breaks=50, main="Histogram of Simulated beta1hat Values", xlab="Estimated Slope (beta1hat)", border="black", col="gray75")
skeptic_data <- read.csv("skeptic.csv")
model <- lm(y ~ x, data=skeptic_data)
cat("Estimated coefficient for beta1:", coefficients(model)[2])
proportion_more_extreme = mean(abs(beta1hat) > abs(0.6895595))
cat("Proportion of simulated beta1hat values more extreme than the observed value:", proportion_more_extreme)
sigma2 <- 25
n <- length(x)
x_bar <- mean(x)
var_beta0hat <- sigma2 * (1/n + x_bar^2 / sum((x - x_bar)^2))
var_beta0hat
mean_beta0hat <- mean(beta0hat)
variance_beta0hat <- var(beta0hat)
list(mean = mean_beta0hat, variance = variance_beta0hat)
hist(beta0hat, breaks=50, main="Histogram of Simulated beta0hat Values", xlab="Estimated Intercept (beta0hat)", border="black", col="gray75")
goalies <- read.csv("goalies.csv")
goalie_model <- lm(W ~ GAA + SV_PCT, data = goalies)
summary(goalie_model)
goalie_model = lm(W ~ MIN, data = goalies)
model <- lm(W ~ GAA + SV_PCT, data = goalies)
f_statistic <- summary(model)$fstatistic["value"]
p_value <- 1 - pf(f_statistic, summary(model)$fstatistic["numdf"], summary(model)$fstatistic["dendf"])
decision <- ifelse(p_value < 0.01, "Reject H0", "Fail to Reject H0")
list(F_statistic = f_statistic, p_value = p_value, decision = decision)
new_data <- data.frame(GAA = 2.93, SV_PCT = 0.906)
predicted_wins <- predict(model, newdata = new_data)
predicted_wins
predict_interval <- predict(model, newdata = new_data, interval = "confidence", level = 0.90)
predict_interval
sy <- sd(goalies$W)
se <- summary(model)$sigma
list(sy, se)
model1 <- lm(W ~ GAA + SV_PCT, data = goalies)
model4 <- lm(W ~ ., data = goalies)
f_test_result <- anova(model1, model4)
f_test_statistic <- f_test_result$F[2]
f_test_p_value <- f_test_result$`Pr(>F)`[2]
list(f_test_statistic, f_test_p_value)
t_test_statistic <- summary(model4)$coefficients["MIN", "t value"]
t_test_p_value <- summary(model4)$coefficients["MIN", "Pr(>|t|)"]
list(t_test_statistic, t_test_p_value)
f_statistic_from_t <- t_test_statistic^2
f_statistic_from_t
