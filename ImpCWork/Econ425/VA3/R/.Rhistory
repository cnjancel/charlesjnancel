knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(fredr)
library(dplyr)
# Set your FRED API key
fredr_set_key("89e09406a6b0e5d39d06d3b19fec5156")
# Creating a diagram for Ricardian Equivalence
library(ggplot2)
library(ggforce)
# Creating the data frame for the points
data_ricardian <- data.frame(
x = c(1.6, 2, 3, 3.4, 3, 2),
y = c(2, 3, 3, 2, 1, 1),
label = c("Government Spending", "Debt", "Taxes", "Future Taxes", "Consumer Savings", "Future Spending")
)
# Plotting the points and labels
ggplot(data_ricardian, aes(x, y)) +
geom_point(size = 5) +  # Adding the points
geom_text(aes(label = label), vjust = -1, size = 5) +  # Adding the text labels
# Drawing the curved arrows
geom_curve(aes(x = 1.6, y = 2, xend = 2, yend = 3), curvature = -0.3,
arrow = arrow(length = unit(0.15, "cm")), size = 1, color = "blue") +
geom_curve(aes(x = 2, y = 3, xend = 3, yend = 3), curvature = -0.3,
arrow = arrow(length = unit(0.15, "cm")), size = 1, color = "blue") +
geom_curve(aes(x = 3, y = 3, xend = 3.4, yend = 2), curvature = -0.3,
arrow = arrow(length = unit(0.15, "cm")), size = 1, color = "blue") +
geom_curve(aes(x = 3.4, y = 2, xend = 3, yend = 1), curvature = -0.3,
arrow = arrow(length = unit(0.15, "cm")), size = 1, color = "blue") +
geom_curve(aes(x = 3, y = 1, xend = 2, yend = 1), curvature = -0.3,
arrow = arrow(length = unit(0.15, "cm")), size = 1, color = "blue") +
geom_curve(aes(x = 2, y = 1, xend = 1.6, yend = 2), curvature = -0.3,
arrow = arrow(length = unit(0.15, "cm")), size = 1, color = "blue") +
# Setting plot limits to prevent cutting off edges
xlim(0.5, 4.5) +
ylim(0.5, 3.5) +
# Removing axis labels and ticks for a cleaner look
theme_void() +
# Adding the title
labs(title = "Ricardian Equivalence")
# Saving the plot as a PNG file
ggsave("Ricardian_Equivalence.png", width = 10, height = 5)
# Fetch data from FRED
government_debt <- fredr(series_id = "GFDEBTN", observation_start = as.Date("2000-01-01"))
interest_rate <- fredr(series_id = "DGS10", observation_start = as.Date("2000-01-01"))
# Merging data on dates
debt_data <- inner_join(government_debt, interest_rate, by = "date") %>%
rename(debt = value.x, interest_rate = value.y) %>%
filter(!is.na(interest_rate))
# Plotting the data
debt_plot <- ggplot(debt_data, aes(x = date)) +
geom_line(aes(y = debt / 1e6, color = "Government Debt (in trillions)")) +
geom_line(aes(y = interest_rate, color = "Interest Rate (%)")) +
scale_y_continuous(
name = "Government Debt (in trillions)",
sec.axis = sec_axis(~., name = "Interest Rate (%)")
) +
labs(
title = "Government Debt and Interest Rate",
x = "Year"
) +
scale_color_manual(
values = c("Government Debt (in trillions)" = "blue", "Interest Rate (%)" = "red")
) +
theme_minimal()
# Save the plot
ggsave("Debt_Constraints.png", plot = debt_plot)
# Display the plot
debt_plot
# Creating a simple supply and demand curve
supply <- data.frame(
quantity = 1:10,
price = seq(2, 20, by = 2)
)
demand <- data.frame(
quantity = 1:10,
price = seq(20, 2, by = -2)
)
equilibrium_plot <- ggplot() +
geom_line(data = supply, aes(x = quantity, y = price), color = "blue") +
geom_line(data = demand, aes(x = quantity, y = price), color = "red") +
geom_point(aes(x = 5, y = 10), color = "purple", size = 3) +
annotate("text", x = 5, y = 12, label = "Equilibrium", color = "purple") +
labs(title = "General Equilibrium Model",
y = "Price",
x = "Quantity")
ggsave("General_Equilibrium.png", plot = equilibrium_plot)
equilibrium_plot
# Creating a bar plot for different estimates of fiscal multipliers
multiplier_data <- data.frame(
study = c("Study A", "Study B", "Study C", "Study D"),
multiplier = c(0.8, 1.2, 1.5, 2.0)
)
multiplier_plot <- ggplot(multiplier_data, aes(x = study, y = multiplier)) +
geom_bar(stat = "identity", fill = "blue") +
labs(title = "Government Spending Multipliers",
y = "Multiplier",
x = "Study")
ggsave("Spending_Multiplier.png", plot = multiplier_plot)
multiplier_plot
# Creating a comparison plot for multipliers of government spending and tax cuts
fiscal_data <- data.frame(
type = c("Government Spending", "Tax Cuts"),
multiplier = c(1.2, 0.8)
)
fiscal_plot <- ggplot(fiscal_data, aes(x = type, y = multiplier)) +
geom_bar(stat = "identity", fill = "green") +
labs(title = "Fiscal Multipliers: Spending vs. Tax Cuts",
y = "Multiplier",
x = "Fiscal Policy Type")
ggsave("Tax_Cuts_Multipliers.png", plot = fiscal_plot)
fiscal_plot
# Fetching consumer price index and government revenue data from FRED
consumer_prices <- fredr(series_id = "CPIAUCSL", observation_start = as.Date("2000-01-01"))
government_revenue <- fredr(series_id = "W068RCQ027SBEA", observation_start = as.Date("2000-01-01"))
# Merging data
vat_data <- inner_join(consumer_prices, government_revenue, by = "date") %>%
rename(consumer_prices = value.x, revenue = value.y) %>%
filter(!is.na(revenue))
# Plotting
vat_plot <- ggplot(vat_data, aes(x = date)) +
geom_line(aes(y = consumer_prices, color = "Consumer Prices")) +
geom_line(aes(y = revenue / 10, color = "Government Revenue (scaled)")) +
scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Government Revenue (in billions)")) +
labs(title = "Impact of VAT Cuts",
y = "Consumer Prices",
x = "Year") +
scale_color_manual(values = c("Consumer Prices" = "blue", "Government Revenue (scaled)" = "red"))
ggsave("VAT_Cuts_Impact.png", plot = vat_plot)
vat_plot
# Creating a historical comparison of economic performance with different fiscal policies
fiscal_policy_data <- data.frame(
year = 2000:2020,
gdp_growth_expansionary = seq(2, 4, length.out = 21),
gdp_growth_contractionary = seq(1, 3, length.out = 21)
)
fiscal_policy_plot <- ggplot(fiscal_policy_data, aes(x = year)) +
geom_line(aes(y = gdp_growth_expansionary, color = "Expansionary Policy")) +
geom_line(aes(y = gdp_growth_contractionary, color = "Contractionary Policy")) +
labs(title = "Impact of Fiscal Policy on Economic Performance",
y = "GDP Growth Rate (%)",
x = "Year") +
scale_color_manual(values = c("Expansionary Policy" = "blue", "Contractionary Policy" = "red"))
ggsave("Fiscal_Policy_Impact.png", plot = fiscal_policy_plot)
fiscal_policy_plot
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(fredr)
library(dplyr)
# Set your FRED API key
fredr_set_key("89e09406a6b0e5d39d06d3b19fec5156")
# Creating a diagram for Ricardian Equivalence
library(ggplot2)
library(ggforce)
# Creating the data frame for the points
data_ricardian <- data.frame(
x = c(1.6, 2, 3, 3.4, 3, 2),
y = c(2, 3, 3, 2, 1, 1),
label = c("Government Spending", "Debt", "Taxes", "Future Taxes", "Consumer Savings", "Future Spending")
)
# Plotting the points and labels
ggplot(data_ricardian, aes(x, y)) +
geom_point(size = 5) +  # Adding the points
geom_text(aes(label = label), vjust = -1, size = 5) +  # Adding the text labels
# Drawing the curved arrows
geom_curve(aes(x = 1.6, y = 2, xend = 2, yend = 3), curvature = -0.3,
arrow = arrow(length = unit(0.15, "cm")), size = 1, color = "blue") +
geom_curve(aes(x = 2, y = 3, xend = 3, yend = 3), curvature = -0.3,
arrow = arrow(length = unit(0.15, "cm")), size = 1, color = "blue") +
geom_curve(aes(x = 3, y = 3, xend = 3.4, yend = 2), curvature = -0.3,
arrow = arrow(length = unit(0.15, "cm")), size = 1, color = "blue") +
geom_curve(aes(x = 3.4, y = 2, xend = 3, yend = 1), curvature = -0.3,
arrow = arrow(length = unit(0.15, "cm")), size = 1, color = "blue") +
geom_curve(aes(x = 3, y = 1, xend = 2, yend = 1), curvature = -0.3,
arrow = arrow(length = unit(0.15, "cm")), size = 1, color = "blue") +
geom_curve(aes(x = 2, y = 1, xend = 1.6, yend = 2), curvature = -0.3,
arrow = arrow(length = unit(0.15, "cm")), size = 1, color = "blue") +
# Setting plot limits to prevent cutting off edges
xlim(0.5, 4.5) +
ylim(0.5, 3.5) +
# Removing axis labels and ticks for a cleaner look
theme_void() +
# Adding the title
labs(title = "Ricardian Equivalence")
# Saving the plot as a PNG file
ggsave("Ricardian_Equivalence.png", width = 10, height = 5)
# Fetch data from FRED
government_debt <- fredr(series_id = "GFDEBTN", observation_start = as.Date("2000-01-01"))
interest_rate <- fredr(series_id = "DGS10", observation_start = as.Date("2000-01-01"))
# Merging data on dates
debt_data <- inner_join(government_debt, interest_rate, by = "date") %>%
rename(debt = value.x, interest_rate = value.y) %>%
filter(!is.na(interest_rate))
# Plotting the data
debt_plot <- ggplot(debt_data, aes(x = date)) +
geom_line(aes(y = debt / 1e6, color = "Government Debt (in trillions)")) +
geom_line(aes(y = interest_rate, color = "Interest Rate (%)")) +
scale_y_continuous(
name = "Government Debt (in trillions)",
sec.axis = sec_axis(~., name = "Interest Rate (%)")
) +
labs(
title = "Government Debt and Interest Rate",
x = "Year"
) +
scale_color_manual(
values = c("Government Debt (in trillions)" = "blue", "Interest Rate (%)" = "red")
) +
theme_minimal()
# Save the plot
ggsave("Debt_Constraints.png", plot = debt_plot)
# Display the plot
debt_plot
# Creating a simple supply and demand curve
supply <- data.frame(
quantity = 1:10,
price = seq(2, 20, by = 2)
)
demand <- data.frame(
quantity = 1:10,
price = seq(20, 2, by = -2)
)
equilibrium_plot <- ggplot() +
geom_line(data = supply, aes(x = quantity, y = price), color = "blue") +
geom_line(data = demand, aes(x = quantity, y = price), color = "red") +
geom_point(aes(x = 5, y = 10), color = "purple", size = 3) +
annotate("text", x = 5, y = 12, label = "Equilibrium", color = "purple") +
labs(title = "General Equilibrium Model",
y = "Price",
x = "Quantity")
ggsave("General_Equilibrium.png", plot = equilibrium_plot)
equilibrium_plot
# Example data for different studies' GSMs
studies <- c("Blanchard & Perotti (2002)", "Ramey (2011)", "Barro & Redlick (2011)", "Hall (2009)", "Christiano et al. (2011)")
multipliers <- c(0.9, 1.4, 0.6, 0.7, 2.5)
# Create a DataFrame
gsm_data <- data.frame(
Study = studies,
Multiplier = multipliers
)
# Plotting the data
gsm_plot <- ggplot(gsm_data, aes(x = Study, y = Multiplier)) +
geom_bar(stat = "identity", fill = "blue") +
ylim(0, 3) +  # Set y-axis limit for better visualization
labs(
title = "Government Spending Multipliers (GSMs) from Various Studies",
x = "Study",
y = "Multiplier"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save the plot
ggsave("Spending_Multipliers.png", plot = gsm_plot)
# Display the plot
gsm_plot
# Creating a comparison plot for multipliers of government spending and tax cuts
fiscal_data <- data.frame(
type = c("Government Spending", "Tax Cuts"),
multiplier = c(1.2, 0.8)
)
fiscal_plot <- ggplot(fiscal_data, aes(x = type, y = multiplier)) +
geom_bar(stat = "identity", fill = "green") +
labs(title = "Fiscal Multipliers: Spending vs. Tax Cuts",
y = "Multiplier",
x = "Fiscal Policy Type")
ggsave("Tax_Cuts_Multipliers.png", plot = fiscal_plot)
fiscal_plot
# Fetching consumer price index and government revenue data from FRED
consumer_prices <- fredr(series_id = "CPIAUCSL", observation_start = as.Date("2000-01-01"))
government_revenue <- fredr(series_id = "W068RCQ027SBEA", observation_start = as.Date("2000-01-01"))
# Merging data
vat_data <- inner_join(consumer_prices, government_revenue, by = "date") %>%
rename(consumer_prices = value.x, revenue = value.y) %>%
filter(!is.na(revenue))
# Plotting
vat_plot <- ggplot(vat_data, aes(x = date)) +
geom_line(aes(y = consumer_prices, color = "Consumer Prices")) +
geom_line(aes(y = revenue / 10, color = "Government Revenue (scaled)")) +
scale_y_continuous(sec.axis = sec_axis(~.*10, name = "Government Revenue (in billions)")) +
labs(title = "Impact of VAT Cuts",
y = "Consumer Prices",
x = "Year") +
scale_color_manual(values = c("Consumer Prices" = "blue", "Government Revenue (scaled)" = "red"))
ggsave("VAT_Cuts_Impact.png", plot = vat_plot)
vat_plot
# Creating a historical comparison of economic performance with different fiscal policies
fiscal_policy_data <- data.frame(
year = 2000:2020,
gdp_growth_expansionary = seq(2, 4, length.out = 21),
gdp_growth_contractionary = seq(1, 3, length.out = 21)
)
fiscal_policy_plot <- ggplot(fiscal_policy_data, aes(x = year)) +
geom_line(aes(y = gdp_growth_expansionary, color = "Expansionary Policy")) +
geom_line(aes(y = gdp_growth_contractionary, color = "Contractionary Policy")) +
labs(title = "Impact of Fiscal Policy on Economic Performance",
y = "GDP Growth Rate (%)",
x = "Year") +
scale_color_manual(values = c("Expansionary Policy" = "blue", "Contractionary Policy" = "red"))
ggsave("Fiscal_Policy_Impact.png", plot = fiscal_policy_plot)
fiscal_policy_plot
