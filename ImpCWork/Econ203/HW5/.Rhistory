b1 <- (sum((data$price - mean(data$price)) * (data$colonial - mean(data$colonial)))) / (sum((data$colonial - mean(data$colonial))^2))
b0 <- mean(data$price) - b1 * mean(data$colonial)
# Using lm
linear_model <- lm(data$price ~ data$colonial)
b0
b1
n
linear_model <- lm(price ~ colonial, data = data)
coefficients(linear_model)
linear_model_sqrft <- lm(price ~ sqrft, data = data)
plot(data$sqrft, data$price, main = "Price vs. sqrft", xlab = "Square Footage", ylab = "Price")
abline(linear_model_sqrft)
linear_model_lotsize <- lm(price ~ lotsize, data = data)
plot(data$lotsize, data$price, main = "Price vs. Lotsize", xlab = "Lot Size", ylab = "Price")
abline(linear_model_lotsize)
# Part (f): Model with sqrft
linear_model_sqrft <- lm(price ~ sqrft, data = data)
coefficients_sqrft <- coefficients(linear_model_sqrft)
b0_sqrft <- round(coefficients_sqrft[1], 2)
b1_sqrft <- round(coefficients_sqrft[2], 2)
# Part (g): Model with lotsize
linear_model_lotsize <- lm(price ~ lotsize, data = data)
coefficients_lotsize <- coefficients(linear_model_lotsize)
b0_lotsize <- round(coefficients_lotsize[1], 2)
b1_lotsize <- round(coefficients_lotsize[2], 2)
# Output the coefficients for sqrft and lotsize models
cat("For sqrft model, b0 (intercept) is", b0_sqrft, "and b1 (slope) is", b1_sqrft, "\n")
cat("For lotsize model, b0 (intercept) is", b0_lotsize, "and b1 (slope) is", b1_lotsize, "\n")
# Part (h): Comparison of R-squared values
r_squared_sqrft <- summary(linear_model_sqrft)$r.squared
r_squared_lotsize <- summary(linear_model_lotsize)$r.squared
# Output the R-squared values for sqrft and lotsize models
cat("R-squared for sqrft model is", r_squared_sqrft, "\n")
cat("R-squared for lotsize model is", r_squared_lotsize, "\n")
# Determine which model explains more variance
if (r_squared_sqrft > r_squared_lotsize) {
cat("The variable sqrft explains more of the difference in Prices than the variable lotsize.\n")
} else {
cat("The variable lotsize explains more of the difference in Prices than the variable sqrft.\n")
}
knitr::opts_chunk$set(echo = TRUE)
options(repos = c(CRAN = "https://cloud.r-project.org/"))
library(readxl)
# Load the dataset
data <- read_excel("housing.xls")
average_price_colonial <- mean(data$price[data$colonial == 1])
average_price_non_colonial <- mean(data$price[data$colonial == 0])
average_price_colonial
average_price_non_colonial
# Manual calculation
n <- length(data$price)
b1 <- (sum((data$price - mean(data$price)) * (data$colonial - mean(data$colonial)))) / (sum((data$colonial - mean(data$colonial))^2))
b0 <- mean(data$price) - b1 * mean(data$colonial)
# Using lm
linear_model <- lm(data$price ~ data$colonial)
b0
b1
n
linear_model <- lm(price ~ colonial, data = data)
coefficients(linear_model)
linear_model_sqrft <- lm(price ~ sqrft, data = data)
plot(data$sqrft, data$price, main = "Price vs. sqrft", xlab = "Square Footage", ylab = "Price")
abline(linear_model_sqrft)
linear_model_lotsize <- lm(price ~ lotsize, data = data)
plot(data$lotsize, data$price, main = "Price vs. Lotsize", xlab = "Lot Size", ylab = "Price")
abline(linear_model_lotsize)
# Part (f): Model with sqrft
linear_model_sqrft <- lm(price ~ sqrft, data = data)
coefficients_sqrft <- coefficients(linear_model_sqrft)
b0_sqrft <- round(coefficients_sqrft[1], 2)
b1_sqrft <- round(coefficients_sqrft[2], 2)
# Part (g): Model with lotsize
linear_model_lotsize <- lm(price ~ lotsize, data = data)
coefficients_lotsize <- coefficients(linear_model_lotsize)
b0_lotsize <- round(coefficients_lotsize[1], 2)
b1_lotsize <- round(coefficients_lotsize[2], 2)
# Output the coefficients for sqrft and lotsize models
cat("For sqrft model, b0 (intercept) is", b0_sqrft, "and b1 (slope) is", b1_sqrft, "\n")
cat("For lotsize model, b0 (intercept) is", b0_lotsize, "and b1 (slope) is", b1_lotsize, "\n")
# Part (h): Comparison of R-squared values
r_squared_sqrft <- summary(linear_model_sqrft)$r.squared
r_squared_lotsize <- summary(linear_model_lotsize)$r.squared
# Output the R-squared values for sqrft and lotsize models
cat("R-squared for sqrft model is", r_squared_sqrft, "\n")
cat("R-squared for lotsize model is", r_squared_lotsize, "\n")
# Determine which model explains more variance
if (r_squared_sqrft > r_squared_lotsize) {
cat("The variable sqrft explains more of the difference in Prices than the variable lotsize.\n")
} else {
cat("The variable lotsize explains more of the difference in Prices than the variable sqrft.\n")
}
knitr::opts_chunk$set(echo = TRUE)
options(repos = c(CRAN = "https://cloud.r-project.org/"))
library(readxl)
# Load the dataset
data <- read_excel("housing.xls")
average_price_colonial <- mean(data$price[data$colonial == 1])
average_price_non_colonial <- mean(data$price[data$colonial == 0])
average_price_colonial
average_price_non_colonial
# Manual calculation
n <- length(data$price)
b1 <- (sum((data$price - mean(data$price)) * (data$colonial - mean(data$colonial)))) / (sum((data$colonial - mean(data$colonial))^2))
b0 <- mean(data$price) - b1 * mean(data$colonial)
# Using lm
linear_model <- lm(data$price ~ data$colonial)
b0
b1
n
linear_model <- lm(price ~ colonial, data = data)
coefficients(linear_model)
linear_model_sqrft <- lm(price ~ sqrft, data = data)
plot(data$sqrft, data$price, main = "Price vs. sqrft", xlab = "Square Footage", ylab = "Price")
abline(linear_model_sqrft)
linear_model_lotsize <- lm(price ~ lotsize, data = data)
plot(data$lotsize, data$price, main = "Price vs. Lotsize", xlab = "Lot Size", ylab = "Price")
abline(linear_model_lotsize)
average_price_colonial <- mean(data$price[data$colonial == 1])
cat("The average price for colonial houses is", round(average_price_colonial, 2), "\n")
average_price_non_colonial <- mean(data$price[data$colonial == 0])
cat("The average price for non-colonial houses is", round(average_price_non_colonial, 2), "\n")
linear_model_colonial <- lm(price ~ colonial, data = data)
coefficients_colonial <- coefficients(linear_model_colonial)
b0_colonial <- round(coefficients_colonial["(Intercept)"], 2)
b1_colonial <- round(coefficients_colonial["colonial"], 2)
cat("The estimated b0 and b1 for the colonial model are", b0_colonial, "and", b1_colonial, "\n")
average_non_colonial_check <- round(b0_colonial, 2) == round(average_price_non_colonial, 2)
cat("The statement that b0 is the average price of non-colonial houses is", average_non_colonial_check, "\n")
average_colonial_check <- round(b1_colonial, 2) == round(average_price_colonial, 2)
cat("The statement that b1 is the average price of colonial houses is", average_colonial_check, "\n")
linear_model_sqrft <- lm(price ~ sqrft, data = data)
coefficients_sqrft <- coefficients(linear_model_sqrft)
b0_sqrft <- round(coefficients_sqrft[1], 2)
b1_sqrft <- round(coefficients_sqrft[2], 2)
linear_model_lotsize <- lm(price ~ lotsize, data = data)
coefficients_lotsize <- coefficients(linear_model_lotsize)
b0_lotsize <- round(coefficients_lotsize[1], 2)
b1_lotsize <- round(coefficients_lotsize[2], 2)
# Output the coefficients for sqrft and lotsize models
cat("For sqrft model, b0 (intercept) is", b0_sqrft, "and b1 (slope) is", b1_sqrft, "\n")
cat("For lotsize model, b0 (intercept) is", b0_lotsize, "and b1 (slope) is", b1_lotsize, "\n")
r_squared_sqrft <- summary(linear_model_sqrft)$r.squared
r_squared_lotsize <- summary(linear_model_lotsize)$r.squared
# Output the R-squared values for sqrft and lotsize models
cat("R-squared for sqrft model is", r_squared_sqrft, "\n")
cat("R-squared for lotsize model is", r_squared_lotsize, "\n")
# Determine which model explains more variance
if (r_squared_sqrft > r_squared_lotsize) {
cat("The variable sqrft explains more of the difference in Prices than the variable lotsize.\n")
} else {
cat("The variable lotsize explains more of the difference in Prices than the variable sqrft.\n")
}
knitr::opts_chunk$set(echo = TRUE)
options(repos = c(CRAN = "https://cloud.r-project.org/"))
library(readxl)
# Load the dataset
data <- read_excel("housing.xls")
average_price_colonial <- mean(data$price[data$colonial == 1])
average_price_non_colonial <- mean(data$price[data$colonial == 0])
average_price_colonial
average_price_non_colonial
# Manual calculation
n <- length(data$price)
b1 <- (sum((data$price - mean(data$price)) * (data$colonial - mean(data$colonial)))) / (sum((data$colonial - mean(data$colonial))^2))
b0 <- mean(data$price) - b1 * mean(data$colonial)
# Using lm
linear_model <- lm(data$price ~ data$colonial)
b0
b1
n
linear_model <- lm(price ~ colonial, data = data)
coefficients(linear_model)
linear_model_sqrft <- lm(price ~ sqrft, data = data)
plot(data$sqrft, data$price, main = "Price vs. sqrft", xlab = "Square Footage", ylab = "Price")
abline(linear_model_sqrft)
linear_model_lotsize <- lm(price ~ lotsize, data = data)
plot(data$lotsize, data$price, main = "Price vs. Lotsize", xlab = "Lot Size", ylab = "Price")
abline(linear_model_lotsize)
average_price_colonial <- mean(data$price[data$colonial == 1])
cat("The average price for colonial houses is", round(average_price_colonial, 2), "\n")
average_price_non_colonial <- mean(data$price[data$colonial == 0])
cat("The average price for non-colonial houses is", round(average_price_non_colonial, 2), "\n")
linear_model_colonial <- lm(price ~ colonial, data = data)
coefficients_colonial <- coefficients(linear_model_colonial)
b0_colonial <- round(coefficients_colonial["(Intercept)"], 2)
b1_colonial <- round(coefficients_colonial["colonial"], 2)
cat("The estimated b0 and b1 for the colonial model are", b0_colonial, "and", b1_colonial, "\n")
average_non_colonial_check <- round(b0_colonial, 2) == round(average_price_non_colonial, 2)
cat("The statement that b0 is the average price of non-colonial houses is", average_non_colonial_check, "\n")
average_colonial_check <- round(b1_colonial, 2) == round(average_price_colonial, 2)
cat("The statement that b1 is the average price of colonial houses is", average_colonial_check, "\n")
linear_model_sqrft <- lm(price ~ sqrft, data = data)
coefficients_sqrft <- coefficients(linear_model_sqrft)
b0_sqrft <- round(coefficients_sqrft[1], 2)
b1_sqrft <- round(coefficients_sqrft[2], 2)
linear_model_lotsize <- lm(price ~ lotsize, data = data)
coefficients_lotsize <- coefficients(linear_model_lotsize)
b0_lotsize <- round(coefficients_lotsize[1], 2)
b1_lotsize <- round(coefficients_lotsize[2], 2)
# Output the coefficients for sqrft and lotsize models
cat("For sqrft model, b0 (intercept) is", b0_sqrft, "and b1 (slope) is", b1_sqrft, "\n")
cat("For lotsize model, b0 (intercept) is", b0_lotsize, "and b1 (slope) is", b1_lotsize, "\n")
summary(data$lotsize)
plot(data$lotsize, data$price)
r_squared_sqrft <- summary(linear_model_sqrft)$r.squared
r_squared_lotsize <- summary(linear_model_lotsize)$r.squared
# Output the R-squared values for sqrft and lotsize models
cat("R-squared for sqrft model is", r_squared_sqrft, "\n")
cat("R-squared for lotsize model is", r_squared_lotsize, "\n")
# Determine which model explains more variance
if (r_squared_sqrft > r_squared_lotsize) {
cat("The variable sqrft explains more of the difference in Prices than the variable lotsize.\n")
} else {
cat("The variable lotsize explains more of the difference in Prices than the variable sqrft.\n")
}
knitr::opts_chunk$set(echo = TRUE)
options(repos = c(CRAN = "https://cloud.r-project.org/"))
library(readxl)
# Load the dataset
data <- read_excel("housing.xls")
average_price_colonial <- mean(data$price[data$colonial == 1])
average_price_non_colonial <- mean(data$price[data$colonial == 0])
average_price_colonial
average_price_non_colonial
# Manual calculation
n <- length(data$price)
b1 <- (sum((data$price - mean(data$price)) * (data$colonial - mean(data$colonial)))) / (sum((data$colonial - mean(data$colonial))^2))
b0 <- mean(data$price) - b1 * mean(data$colonial)
# Using lm
linear_model <- lm(data$price ~ data$colonial)
b0
b1
n
linear_model <- lm(price ~ colonial, data = data)
coefficients(linear_model)
linear_model_sqrft <- lm(price ~ sqrft, data = data)
plot(data$sqrft, data$price, main = "Price vs. sqrft", xlab = "Square Footage", ylab = "Price")
abline(linear_model_sqrft)
linear_model_lotsize <- lm(price ~ lotsize, data = data)
plot(data$lotsize, data$price, main = "Price vs. Lotsize", xlab = "Lot Size", ylab = "Price")
abline(linear_model_lotsize)
average_price_colonial <- mean(data$price[data$colonial == 1])
cat("The average price for colonial houses is", round(average_price_colonial, 2), "\n")
average_price_non_colonial <- mean(data$price[data$colonial == 0])
cat("The average price for non-colonial houses is", round(average_price_non_colonial, 2), "\n")
linear_model_colonial <- lm(price ~ colonial, data = data)
coefficients_colonial <- coefficients(linear_model_colonial)
b0_colonial <- round(coefficients_colonial["(Intercept)"], 2)
b1_colonial <- round(coefficients_colonial["colonial"], 2)
cat("The estimated b0 and b1 for the colonial model are", b0_colonial, "and", b1_colonial, "\n")
average_non_colonial_check <- round(b0_colonial, 2) == round(average_price_non_colonial, 2)
cat("The statement that b0 is the average price of non-colonial houses is", average_non_colonial_check, "\n")
average_colonial_check <- round(b1_colonial, 2) == round(average_price_colonial, 2)
cat("The statement that b1 is the average price of colonial houses is", average_colonial_check, "\n")
linear_model_sqrft <- lm(price ~ sqrft, data = data)
coefficients_sqrft <- coefficients(linear_model_sqrft)
b0_sqrft <- round(coefficients_sqrft[1], 2)
b1_sqrft <- round(coefficients_sqrft[2], 2)
linear_model_lotsize <- lm(price ~ lotsize, data = data)
coefficients_lotsize <- coefficients(linear_model_lotsize)
b0_lotsize <- round(coefficients_lotsize[1], 2)
b1_lotsize <- round(coefficients_lotsize[2], 2)
# Output the coefficients for sqrft and lotsize models
cat("For sqrft model, b0 (intercept) is", b0_sqrft, "and b1 (slope) is", b1_sqrft, "\n")
cat("For lotsize model, b0 (intercept) is", b0_lotsize, "and b1 (slope) is", b1_lotsize, "\n")
summary(data$lotsize)
plot(data$lotsize, data$price)
b1_lotsize <- coefficients_lotsize[2]  # Slope for lotsize model without rounding
cat("The unrounded slope for lotsize model is", b1_lotsize, "\n")
r_squared_sqrft <- summary(linear_model_sqrft)$r.squared
r_squared_lotsize <- summary(linear_model_lotsize)$r.squared
# Output the R-squared values for sqrft and lotsize models
cat("R-squared for sqrft model is", r_squared_sqrft, "\n")
cat("R-squared for lotsize model is", r_squared_lotsize, "\n")
# Determine which model explains more variance
if (r_squared_sqrft > r_squared_lotsize) {
cat("The variable sqrft explains more of the difference in Prices than the variable lotsize.\n")
} else {
cat("The variable lotsize explains more of the difference in Prices than the variable sqrft.\n")
}
knitr::opts_chunk$set(echo = TRUE)
options(repos = c(CRAN = "https://cloud.r-project.org/"))
library(readxl)
# Load the dataset
data <- read_excel("housing.xls")
average_price_colonial <- mean(data$price[data$colonial == 1])
average_price_non_colonial <- mean(data$price[data$colonial == 0])
average_price_colonial
average_price_non_colonial
# Manual calculation
n <- length(data$price)
b1 <- (sum((data$price - mean(data$price)) * (data$colonial - mean(data$colonial)))) / (sum((data$colonial - mean(data$colonial))^2))
b0 <- mean(data$price) - b1 * mean(data$colonial)
# Using lm
linear_model <- lm(data$price ~ data$colonial)
b0
b1
n
linear_model <- lm(price ~ colonial, data = data)
coefficients(linear_model)
linear_model_sqrft <- lm(price ~ sqrft, data = data)
plot(data$sqrft, data$price, main = "Price vs. sqrft", xlab = "Square Footage", ylab = "Price")
abline(linear_model_sqrft)
linear_model_lotsize <- lm(price ~ lotsize, data = data)
plot(data$lotsize, data$price, main = "Price vs. Lotsize", xlab = "Lot Size", ylab = "Price")
abline(linear_model_lotsize)
average_price_colonial <- mean(data$price[data$colonial == 1])
cat("The average price for colonial houses is", round(average_price_colonial, 2), "\n")
average_price_non_colonial <- mean(data$price[data$colonial == 0])
cat("The average price for non-colonial houses is", round(average_price_non_colonial, 2), "\n")
linear_model_colonial <- lm(price ~ colonial, data = data)
coefficients_colonial <- coefficients(linear_model_colonial)
b0_colonial <- round(coefficients_colonial["(Intercept)"], 2)
b1_colonial <- round(coefficients_colonial["colonial"], 2)
cat("The estimated b0 and b1 for the colonial model are", b0_colonial, "and", b1_colonial, "\n")
average_non_colonial_check <- round(b0_colonial, 2) == round(average_price_non_colonial, 2)
cat("The statement that b0 is the average price of non-colonial houses is", average_non_colonial_check, "\n")
average_colonial_check <- round(b1_colonial, 2) == round(average_price_colonial, 2)
cat("The statement that b1 is the average price of colonial houses is", average_colonial_check, "\n")
linear_model_sqrft <- lm(price ~ sqrft, data = data)
coefficients_sqrft <- coefficients(linear_model_sqrft)
b0_sqrft <- round(coefficients_sqrft[1], 2)
b1_sqrft <- round(coefficients_sqrft[2], 2)
linear_model_lotsize <- lm(price ~ lotsize, data = data)
coefficients_lotsize <- coefficients(linear_model_lotsize)
b0_lotsize <- round(coefficients_lotsize[1], 2)
b1_lotsize <- round(coefficients_lotsize[2], 2)
# Output the coefficients for sqrft and lotsize models
cat("For sqrft model, b0 (intercept) is", b0_sqrft, "and b1 (slope) is", b1_sqrft, "\n")
cat("For lotsize model, b0 (intercept) is", b0_lotsize, "and b1 (slope) is", b1_lotsize, "\n")
summary(data$lotsize)
plot(data$lotsize, data$price)
b1_lotsize <- coefficients_lotsize[2]  # Slope for lotsize model without rounding
cat("The unrounded slope for lotsize model is", b1_lotsize, "\n")
# Check the structure of the data to ensure 'lotsize' is numeric
str(data)
# Calculate coefficients without rounding
linear_model_lotsize <- lm(price ~ lotsize, data = data)
coefficients_lotsize <- coefficients(linear_model_lotsize)
b0_lotsize <- coefficients_lotsize[1]  # Intercept for lotsize model
b1_lotsize <- coefficients_lotsize[2]  # Slope for lotsize model
# Output the coefficients for the lotsize model without rounding
cat("For lotsize model, b0 (intercept) is", b0_lotsize, "and b1 (slope) is", b1_lotsize, "\n")
r_squared_sqrft <- summary(linear_model_sqrft)$r.squared
r_squared_lotsize <- summary(linear_model_lotsize)$r.squared
# Output the R-squared values for sqrft and lotsize models
cat("R-squared for sqrft model is", r_squared_sqrft, "\n")
cat("R-squared for lotsize model is", r_squared_lotsize, "\n")
# Determine which model explains more variance
if (r_squared_sqrft > r_squared_lotsize) {
cat("The variable sqrft explains more of the difference in Prices than the variable lotsize.\n")
} else {
cat("The variable lotsize explains more of the difference in Prices than the variable sqrft.\n")
}
knitr::opts_chunk$set(echo = TRUE)
options(repos = c(CRAN = "https://cloud.r-project.org/"))
library(readxl)
# Load the dataset
data <- read_excel("housing.xls")
average_price_colonial <- mean(data$price[data$colonial == 1])
average_price_non_colonial <- mean(data$price[data$colonial == 0])
average_price_colonial
average_price_non_colonial
# Manual calculation
n <- length(data$price)
b1 <- (sum((data$price - mean(data$price)) * (data$colonial - mean(data$colonial)))) / (sum((data$colonial - mean(data$colonial))^2))
b0 <- mean(data$price) - b1 * mean(data$colonial)
# Using lm
linear_model <- lm(data$price ~ data$colonial)
b0
b1
n
linear_model <- lm(price ~ colonial, data = data)
coefficients(linear_model)
linear_model_sqrft <- lm(price ~ sqrft, data = data)
plot(data$sqrft, data$price, main = "Price vs. sqrft", xlab = "Square Footage", ylab = "Price")
abline(linear_model_sqrft)
linear_model_lotsize <- lm(price ~ lotsize, data = data)
plot(data$lotsize, data$price, main = "Price vs. Lotsize", xlab = "Lot Size", ylab = "Price")
abline(linear_model_lotsize)
average_price_colonial <- mean(data$price[data$colonial == 1])
cat("The average price for colonial houses is", round(average_price_colonial, 2), "\n")
average_price_non_colonial <- mean(data$price[data$colonial == 0])
cat("The average price for non-colonial houses is", round(average_price_non_colonial, 2), "\n")
linear_model_colonial <- lm(price ~ colonial, data = data)
coefficients_colonial <- coefficients(linear_model_colonial)
b0_colonial <- round(coefficients_colonial["(Intercept)"], 2)
b1_colonial <- round(coefficients_colonial["colonial"], 2)
cat("The estimated b0 and b1 for the colonial model are", b0_colonial, "and", b1_colonial, "\n")
average_non_colonial_check <- round(b0_colonial, 2) == round(average_price_non_colonial, 2)
cat("The statement that b0 is the average price of non-colonial houses is", average_non_colonial_check, "\n")
average_colonial_check <- round(b1_colonial, 2) == round(average_price_colonial, 2)
cat("The statement that b1 is the average price of colonial houses is", average_colonial_check, "\n")
linear_model_sqrft <- lm(price ~ sqrft, data = data)
coefficients_sqrft <- coefficients(linear_model_sqrft)
b0_sqrft <- round(coefficients_sqrft[1], 2)
b1_sqrft <- round(coefficients_sqrft[2], 2)
linear_model_lotsize <- lm(price ~ lotsize, data = data)
coefficients_lotsize <- coefficients(linear_model_lotsize)
b0_lotsize <- round(coefficients_lotsize[1], 2)
b1_lotsize <- round(coefficients_lotsize[2], 2)
# Output the coefficients for sqrft and lotsize models
cat("For sqrft model, b0 (intercept) is", b0_sqrft, "and b1 (slope) is", b1_sqrft, "\n")
cat("For lotsize model, b0 (intercept) is", b0_lotsize, "and b1 (slope) is", b1_lotsize, "\n")
summary(data$lotsize)
plot(data$lotsize, data$price)
b1_lotsize <- coefficients_lotsize[2]  # Slope for lotsize model without rounding
cat("The unrounded slope for lotsize model is", b1_lotsize, "\n")
# Check the structure of the data to ensure 'lotsize' is numeric
str(data)
# Calculate coefficients without rounding
linear_model_lotsize <- lm(price ~ lotsize, data = data)
coefficients_lotsize <- coefficients(linear_model_lotsize)
b0_lotsize <- coefficients_lotsize[1]  # Intercept for lotsize model
b1_lotsize <- coefficients_lotsize[2]  # Slope for lotsize model
# Output the coefficients for the lotsize model without rounding
cat("For lotsize model, b0 (intercept) is", b0_lotsize, "and b1 (slope) is", b1_lotsize, "\n")
plot(data$lotsize, data$price, main = "Price vs. Lotsize", xlab = "Lot Size", ylab = "Price")
abline(a = b0_lotsize, b = b1_lotsize)  # Use the precise coefficients here
r_squared_sqrft <- summary(linear_model_sqrft)$r.squared
r_squared_lotsize <- summary(linear_model_lotsize)$r.squared
# Output the R-squared values for sqrft and lotsize models
cat("R-squared for sqrft model is", r_squared_sqrft, "\n")
cat("R-squared for lotsize model is", r_squared_lotsize, "\n")
# Determine which model explains more variance
if (r_squared_sqrft > r_squared_lotsize) {
cat("The variable sqrft explains more of the difference in Prices than the variable lotsize.\n")
} else {
cat("The variable lotsize explains more of the difference in Prices than the variable sqrft.\n")
}
View(data)
View(housing_data)
View(housing_data)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
options(repos = c(CRAN = "https://cloud.r-project.org/"))
library(readxl)
# Load the dataset
data <- read_excel("housing.xls")
average_price_colonial <- mean(data$price[data$colonial == 1])
average_price_non_colonial <- mean(data$price[data$colonial == 0])
average_price_colonial
average_price_non_colonial
# Manual calculation
n <- length(data$price)
b1 <- (sum((data$price - mean(data$price)) * (data$colonial - mean(data$colonial)))) / (sum((data$colonial - mean(data$colonial))^2))
b0 <- mean(data$price) - b1 * mean(data$colonial)
# Using lm
linear_model <- lm(data$price ~ data$colonial)
b0
b1
n
linear_model <- lm(price ~ colonial, data = data)
coefficients(linear_model)
linear_model_sqrft <- lm(price ~ sqrft, data = data)
plot(data$sqrft, data$price, main = "Price vs. sqrft", xlab = "Square Footage", ylab = "Price")
abline(linear_model_sqrft)
linear_model_lotsize <- lm(price ~ lotsize, data = data)
plot(data$lotsize, data$price, main = "Price vs. Lotsize", xlab = "Lot Size", ylab = "Price")
abline(linear_model_lotsize)
average_price_colonial <- mean(data$price[data$colonial == 1])
cat("The average price for colonial houses is", round(average_price_colonial, 2), "\n")
average_price_non_colonial <- mean(data$price[data$colonial == 0])
cat("The average price for non-colonial houses is", round(average_price_non_colonial, 2), "\n")
linear_model_colonial <- lm(price ~ colonial, data = data)
coefficients_colonial <- coefficients(linear_model_colonial)
b0_colonial <- round(coefficients_colonial["(Intercept)"], 2)
b1_colonial <- round(coefficients_colonial["colonial"], 2)
cat("The estimated b0 and b1 for the colonial model are", b0_colonial, "and", b1_colonial, "\n")
average_non_colonial_check <- round(b0_colonial, 2) == round(average_price_non_colonial, 2)
cat("The statement that b0 is the average price of non-colonial houses is", average_non_colonial_check, "\n")
average_colonial_check <- round(b1_colonial, 2) == round(average_price_colonial, 2)
cat("The statement that b1 is the average price of colonial houses is", average_colonial_check, "\n")
linear_model_sqrft <- lm(price ~ sqrft, data = data)
coefficients_sqrft <- coefficients(linear_model_sqrft)
b0_sqrft <- round(coefficients_sqrft[1], 2)
b1_sqrft <- round(coefficients_sqrft[2], 2)
linear_model_lotsize <- lm(price ~ lotsize, data = data)
coefficients_lotsize <- coefficients(linear_model_lotsize)
b0_lotsize <- round(coefficients_lotsize[1], 2)
b1_lotsize <- round(coefficients_lotsize[2], 2)
# Output the coefficients for sqrft and lotsize models
cat("For sqrft model, b0 (intercept) is", b0_sqrft, "and b1 (slope) is", b1_sqrft, "\n")
cat("For lotsize model, b0 (intercept) is", b0_lotsize, "and b1 (slope) is", b1_lotsize, "\n")
summary(data$lotsize)
plot(data$lotsize, data$price)
b1_lotsize <- coefficients_lotsize[2]  # Slope for lotsize model without rounding
cat("The unrounded slope for lotsize model is", b1_lotsize, "\n")
# Check the structure of the data to ensure 'lotsize' is numeric
str(data)
# Calculate coefficients without rounding
linear_model_lotsize <- lm(price ~ lotsize, data = data)
coefficients_lotsize <- coefficients(linear_model_lotsize)
b0_lotsize <- coefficients_lotsize[1]  # Intercept for lotsize model
b1_lotsize <- coefficients_lotsize[2]  # Slope for lotsize model
# Output the coefficients for the lotsize model without rounding
cat("For lotsize model, b0 (intercept) is", b0_lotsize, "and b1 (slope) is", b1_lotsize, "\n")
plot(data$lotsize, data$price, main = "Price vs. Lotsize", xlab = "Lot Size", ylab = "Price")
abline(a = b0_lotsize, b = b1_lotsize)  # Use the precise coefficients here
r_squared_sqrft <- summary(linear_model_sqrft)$r.squared
r_squared_lotsize <- summary(linear_model_lotsize)$r.squared
# Output the R-squared values for sqrft and lotsize models
cat("R-squared for sqrft model is", r_squared_sqrft, "\n")
cat("R-squared for lotsize model is", r_squared_lotsize, "\n")
# Determine which model explains more variance
if (r_squared_sqrft > r_squared_lotsize) {
cat("The variable sqrft explains more of the difference in Prices than the variable lotsize.\n")
} else {
cat("The variable lotsize explains more of the difference in Prices than the variable sqrft.\n")
}
source("~/.active-rstudio-document", echo=TRUE)
